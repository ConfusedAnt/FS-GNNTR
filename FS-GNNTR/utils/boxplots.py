import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

df = pd.DataFrame({'Task': ['R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.', 'R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.', 'R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.'],\
                  'GIN':        np.asarray([0.6997, 0.682, 0.7061, 0.6961, 0.7103, 0.6995, 0.6864, 0.7005, 0.7038, 0.7014, 0.678, 0.7134, 0.7035, 0.6801, 0.704, 0.7071, 0.6868, 0.6953, 0.6995, 0.7182, 0.6875, 0.6958, 0.7108, 0.7009, 0.6841, 0.6933, 0.7165, 0.6999, 0.702, 0.6982]) ,
                  'GCN':        np.asarray([0.6103, 0.6089, 0.6159, 0.6036, 0.6105, 0.5948, 0.6023, 0.6034, 0.602, 0.5993, 0.5917, 0.5918, 0.5964, 0.6068, 0.604, 0.5986, 0.598, 0.6056, 0.6015, 0.6039, 0.6019, 0.6027, 0.6121, 0.5947, 0.5942, 0.5911, 0.5977, 0.6145, 0.6101, 0.6038]) ,
                  'GraphSAGE':  np.asarray([0.639, 0.6592, 0.6355, 0.6315, 0.6208, 0.6416, 0.6284, 0.638, 0.6293, 0.6211, 0.6427, 0.6212, 0.6455, 0.6438, 0.6289, 0.6434, 0.6306, 0.6318, 0.6372, 0.6287, 0.6275, 0.6203, 0.6343, 0.6209, 0.6249, 0.6347, 0.647, 0.625, 0.6253, 0.6421]) ,
                  'FS-GNNTR': np.asarray([0.7154, 0.7148, 0.7169, 0.717, 0.718, 0.7148, 0.7164, 0.7159, 0.7159, 0.7127, 0.7148, 0.7153, 0.7164, 0.7174, 0.7154, 0.7154, 0.7158, 0.7143, 0.7143, 0.7181, 0.7168, 0.7133, 0.7159, 0.7196, 0.7154, 0.7133, 0.7159, 0.7186, 0.7143, 0.7133])
                  })


df = df[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df2 = pd.DataFrame({'Task': ['P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.'],\
                  'GIN':        np.asarray([0.7525, 0.7756, 0.7485, 0.7683, 0.77, 0.7708, 0.7771, 0.7708, 0.7822, 0.7708, 0.7589, 0.7737, 0.7798, 0.7699, 0.7609, 0.7753, 0.7703, 0.7632, 0.7586, 0.7729, 0.7732, 0.7646, 0.766, 0.7709, 0.7756, 0.7768, 0.7635, 0.7655, 0.7754, 0.7658]) ,
                  'GCN':        np.asarray([0.7208, 0.698, 0.7097, 0.7322, 0.729, 0.7287, 0.7045, 0.7187, 0.7199, 0.6917, 0.7195, 0.7314, 0.7133, 0.7418, 0.7399, 0.7162, 0.715, 0.7261, 0.7273, 0.7257, 0.7487, 0.7188, 0.7134, 0.7207, 0.7112, 0.7092, 0.7131, 0.711, 0.7261, 0.7296]) ,
                  'GraphSAGE':  np.asarray([0.7285, 0.7391, 0.7371, 0.7184, 0.7276, 0.7228, 0.7402, 0.7244, 0.7228, 0.7215, 0.7264, 0.7162, 0.7325, 0.7218, 0.7325, 0.7306, 0.72, 0.7274, 0.7151, 0.7127, 0.7254, 0.7038, 0.7252, 0.7178, 0.727, 0.7228, 0.7277, 0.7208, 0.7229, 0.7335]) ,
                  'FS-GNNTR': np.asarray([0.7292, 0.7323, 0.7307, 0.7296, 0.7323, 0.7284, 0.7284, 0.735, 0.73, 0.73, 0.7288, 0.7323, 0.7277, 0.7288, 0.7327, 0.7296, 0.7315, 0.7342, 0.7296, 0.7324, 0.7296, 0.7292, 0.7277, 0.7315, 0.7288, 0.7307, 0.7389, 0.7304, 0.7304, 0.7307])
                  })

df2 = df2[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df3 = pd.DataFrame({'Task': ['E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.'],\
                  'GIN':        np.asarray([0.6938, 0.7034, 0.6989, 0.693, 0.6977, 0.7044, 0.7021, 0.7098, 0.7165, 0.716, 0.6928, 0.7185, 0.6863, 0.705, 0.6955, 0.6955, 0.6961, 0.7013, 0.6878, 0.7, 0.7029, 0.696, 0.7017, 0.7031, 0.7068, 0.6987, 0.69, 0.7053, 0.7034, 0.7106]) ,
                  'GCN':        np.asarray([0.6439, 0.626, 0.6078, 0.6275, 0.6231, 0.6216, 0.6359, 0.6189, 0.632, 0.6207, 0.6221, 0.6289, 0.6276, 0.6091, 0.622, 0.6212, 0.6199, 0.6328, 0.6197, 0.6323, 0.6142, 0.6349, 0.6156, 0.6264, 0.6355, 0.6279, 0.5977, 0.6219, 0.6263, 0.5991]) ,
                  'GraphSAGE':  np.asarray([0.6632, 0.6394, 0.6531, 0.6612, 0.6512, 0.6537, 0.6379, 0.6538, 0.6439, 0.6435, 0.6413, 0.6577, 0.6611, 0.6645, 0.6392, 0.6549, 0.6326, 0.6512, 0.6496, 0.6333, 0.6483, 0.6516, 0.6564, 0.6364, 0.6353, 0.6303, 0.6535, 0.6433, 0.6364, 0.6499]) ,
                  'FS-GNNTR': np.asarray([0.7331, 0.7317, 0.7344, 0.7333, 0.7346, 0.7357, 0.7319, 0.7321, 0.7313, 0.733, 0.7331, 0.7324, 0.7312, 0.7336, 0.7329, 0.7337, 0.7333, 0.7337, 0.7316, 0.7329, 0.7309, 0.7351, 0.7341, 0.7293, 0.7313, 0.7321, 0.7316, 0.7321, 0.7327, 0.7306])
                  })

df3 = df3[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df4 = pd.DataFrame({'Task': ['C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D'],\
                  'GIN':        np.asarray([0.686, 0.6914, 0.675, 0.6852, 0.6613, 0.6787, 0.6995, 0.7001, 0.7045, 0.6916, 0.6979, 0.6913, 0.6762, 0.6971, 0.6668, 0.6961, 0.6748, 0.694, 0.7074, 0.6652, 0.674, 0.6937, 0.6927, 0.6759, 0.6953, 0.6999, 0.7001, 0.6965, 0.6937, 0.6956]) ,
                  'GCN':        np.asarray([0.5954, 0.6019, 0.6034, 0.61, 0.6029, 0.6013, 0.5867, 0.6061, 0.5929, 0.5886, 0.5821, 0.6063, 0.6029, 0.5989, 0.6004, 0.5997, 0.5995, 0.6082, 0.6044, 0.5699, 0.604, 0.6024, 0.5991, 0.6059, 0.6012, 0.6038, 0.6041, 0.5958, 0.5819, 0.5878]) ,
                  'GraphSAGE':  np.asarray([0.6451, 0.6391, 0.6166, 0.6406, 0.6284, 0.6404, 0.6219, 0.6347, 0.6478, 0.614, 0.6171, 0.6274, 0.6173, 0.6425, 0.6332, 0.6313, 0.6196, 0.6264, 0.6364, 0.6406, 0.6293, 0.6209, 0.6278, 0.6282, 0.644, 0.6308, 0.6349, 0.6248, 0.6296, 0.6254]) ,
                  'FS-GNNTR': np.asarray([0.7365, 0.7358, 0.7359, 0.7355, 0.7378, 0.7326, 0.7352, 0.7374, 0.7315, 0.7356, 0.7323, 0.7366, 0.7378, 0.7395, 0.7371, 0.7432, 0.7346, 0.7331, 0.7354, 0.7327, 0.7348, 0.734, 0.7326, 0.7372, 0.7338, 0.7382, 0.7347, 0.7347, 0.7346, 0.7331])
                  })

df4 = df4[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df5 = pd.DataFrame({'Task': ['N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.'],\
                  'GIN':        np.asarray([0.6141, 0.6669, 0.6528, 0.6572, 0.6444, 0.655, 0.6675, 0.6533, 0.6468, 0.6411, 0.6613, 0.6602, 0.6625, 0.6396, 0.6421, 0.6648, 0.6539, 0.6616, 0.6599, 0.6576, 0.6555, 0.6469, 0.6427, 0.6597, 0.6557, 0.6579, 0.6523, 0.6592, 0.6522, 0.6629]) ,
                  'GCN':        np.asarray([0.6045, 0.5839, 0.5624, 0.6029, 0.6071, 0.618, 0.5801, 0.5772, 0.6079, 0.594, 0.5777, 0.5838, 0.5813, 0.6322, 0.5922, 0.6118, 0.5702, 0.6167, 0.5828, 0.6032, 0.5845, 0.6106, 0.6054, 0.5437, 0.6087, 0.588, 0.5993, 0.5743, 0.591, 0.615]) ,
                  'GraphSAGE':  np.asarray([0.5753, 0.5849, 0.5923, 0.6049, 0.6022, 0.6023, 0.5882, 0.5825, 0.587, 0.5899, 0.6106, 0.5824, 0.5781, 0.5848, 0.5945, 0.6112, 0.5974, 0.5897, 0.5958, 0.5998, 0.5933, 0.5974, 0.5765, 0.5883, 0.5852, 0.6063, 0.5898, 0.5838, 0.5982, 0.5944]) ,
                  'FS-GNNTR': np.asarray([0.6607, 0.6549, 0.6546, 0.667, 0.6594, 0.6652, 0.6689, 0.6673, 0.6633, 0.6605, 0.6712, 0.6636, 0.6666, 0.6605, 0.6605, 0.6583, 0.6609, 0.6575, 0.6587, 0.6689, 0.6602, 0.6666, 0.6673, 0.6671, 0.6659, 0.6613, 0.6681, 0.6573, 0.6609, 0.6585])
                  })

df5 = df5[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df6 = pd.DataFrame({'Task': ['I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.'],\
                  'GIN':        np.asarray([0.7304, 0.7342, 0.7235, 0.7322, 0.7121, 0.7259, 0.7297, 0.7381, 0.7365, 0.7357, 0.7314, 0.7345, 0.7146, 0.7307, 0.7131, 0.7295, 0.7326, 0.7311, 0.7264, 0.7311, 0.7325, 0.7327, 0.7208, 0.7068, 0.7279, 0.7311, 0.7364, 0.7432, 0.7355, 0.7301]) ,
                  'GCN':        np.asarray([0.6416, 0.658, 0.6493, 0.6449, 0.6018, 0.6481, 0.6532, 0.6634, 0.6595, 0.6437, 0.6469, 0.634, 0.6368, 0.6657, 0.6512, 0.634, 0.6478, 0.6525, 0.663, 0.6713, 0.5957, 0.6484, 0.6661, 0.6354, 0.6443, 0.6249, 0.6407, 0.6196, 0.6601, 0.6629]) ,
                  'GraphSAGE':  np.asarray([0.6772, 0.703, 0.692, 0.7013, 0.6712, 0.6609, 0.6807, 0.6817, 0.6784, 0.6542, 0.6783, 0.6951, 0.6724, 0.6963, 0.6729, 0.6815, 0.6699, 0.6767, 0.6507, 0.6758, 0.6837, 0.6661, 0.6767, 0.6641, 0.6956, 0.6937, 0.6816, 0.6865, 0.6882, 0.6883]) ,
                  'FS-GNNTR': np.asarray([0.7425, 0.7401, 0.7386, 0.7395, 0.7386, 0.7394, 0.7405, 0.7364, 0.741, 0.7382, 0.7397, 0.7417, 0.7389, 0.7389, 0.74, 0.7367, 0.7396, 0.74, 0.7426, 0.7416, 0.7425, 0.7382, 0.7384, 0.7383, 0.7406, 0.7388, 0.7408, 0.7365, 0.7404, 0.7445])
                  })

df6 = df6[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df_final = pd.concat([df, df2, df3, df4, df5, df6], ignore_index = True, sort = False)

dd=pd.melt(df_final,id_vars=['Task'],value_vars=['GIN','GCN','GraphSAGE','FS-GNNTR'],var_name='Models')
fig, ax = plt.subplots()
sns.boxplot(x='Task',y='value',data=dd,hue='Models', ax=ax)
ax.axhline(y=0.7195, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='Task', ylabel='ROC-AUC score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
plt.savefig('boxplot_sider_5.png', dpi=300, bbox_inches='tight')

########################################################################

df = pd.DataFrame({'Task': ['SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE'],\
                  'GIN':        np.asarray([0.617, 0.6205, 0.6209, 0.6027, 0.6173, 0.6066, 0.61, 0.6042, 0.6075, 0.6065, 0.6129, 0.616, 0.5989, 0.6069, 0.6052, 0.6365, 0.6182, 0.6163, 0.6213, 0.6108, 0.6195, 0.6136, 0.6174, 0.6103, 0.6119, 0.611, 0.6228, 0.6174, 0.6048, 0.6088]) ,
                  'GCN':        np.asarray([0.6526, 0.6671, 0.6567, 0.589, 0.6394, 0.6374, 0.6779, 0.6534, 0.6706, 0.6602, 0.6897, 0.6863, 0.6341, 0.6709, 0.598, 0.6553, 0.6576, 0.6768, 0.6197, 0.6722, 0.6455, 0.6584, 0.6441, 0.6484, 0.6607, 0.6568, 0.6416, 0.6783, 0.6078, 0.6431]) ,
                  'GraphSAGE':  np.asarray([0.661, 0.5982, 0.6458, 0.6241, 0.5915, 0.6339, 0.6165, 0.6144, 0.6584, 0.6743, 0.6179, 0.658, 0.6113, 0.6076, 0.6143, 0.6238, 0.6642, 0.6477, 0.6042, 0.6019, 0.6202, 0.639, 0.622, 0.6156, 0.6535, 0.654, 0.5697, 0.6142, 0.6371, 0.5636]) ,
                  'FS-GNNTR': np.asarray([0.7695, 0.7711, 0.7706, 0.775, 0.7739, 0.7711, 0.7703, 0.7696, 0.7741, 0.7707, 0.7716, 0.7756, 0.776, 0.7701, 0.7727, 0.7716, 0.7733, 0.7724, 0.77, 0.7719, 0.7712, 0.7714, 0.773, 0.7709, 0.7731, 0.7713, 0.7723, 0.7769, 0.7736, 0.776])
                  })


df = df[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df2 = pd.DataFrame({'Task': ['SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP'],\
                  'GIN':        np.asarray([0.5816, 0.5833, 0.5614, 0.5814, 0.5832, 0.5733, 0.5753, 0.5786, 0.569, 0.5944, 0.5853, 0.5787, 0.5889, 0.5752, 0.5773, 0.5766, 0.571, 0.5776, 0.5695, 0.5815, 0.588, 0.5843, 0.5833, 0.5669, 0.5682, 0.5723, 0.5768, 0.5719, 0.5817, 0.5798]) ,
                  'GCN':        np.asarray([0.6519, 0.6715, 0.6813, 0.6566, 0.6581, 0.6754, 0.6544, 0.659, 0.6626, 0.656, 0.6453, 0.6667, 0.6437, 0.6891, 0.6548, 0.6888, 0.6641, 0.671, 0.667, 0.6609, 0.6553, 0.6685, 0.6956, 0.6636, 0.6377, 0.6861, 0.6634, 0.6883, 0.6641, 0.6604]) ,
                  'GraphSAGE':  np.asarray([0.6603, 0.6632, 0.6554, 0.6359, 0.6422, 0.6623, 0.6672, 0.6753, 0.659, 0.6391, 0.638, 0.6662, 0.6178, 0.6443, 0.5814, 0.6481, 0.6739, 0.6269, 0.6348, 0.6444, 0.6553, 0.6711, 0.5905, 0.6343, 0.6607, 0.6343, 0.5924, 0.6476, 0.5868, 0.6708]) ,
                  'FS-GNNTR': np.asarray([0.7867, 0.7842, 0.787, 0.7858, 0.7869, 0.7864, 0.7865, 0.7857, 0.7852, 0.7866, 0.7849, 0.7848, 0.788, 0.7863, 0.7866, 0.7862, 0.7875, 0.786, 0.7852, 0.7855, 0.785, 0.7858, 0.7872, 0.7861, 0.7866, 0.7849, 0.7857, 0.786, 0.7855, 0.7847])
                  })


df2 = df2[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df3 = pd.DataFrame({'Task': ['SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53'],\
                  'GIN':        np.asarray([0.5776, 0.5973, 0.5902, 0.5986, 0.6011, 0.5855, 0.5785, 0.6045, 0.583, 0.5978, 0.5666, 0.5941, 0.5827, 0.5955, 0.599, 0.5708, 0.5787, 0.5662, 0.602, 0.5742, 0.5809, 0.6084, 0.6017, 0.5937, 0.5863, 0.6035, 0.5845, 0.5827, 0.5973, 0.5808]) ,
                  'GCN':        np.asarray([0.5975, 0.6617, 0.6081, 0.604, 0.6316, 0.6155, 0.6128, 0.6544, 0.6493, 0.6243, 0.6127, 0.6007, 0.6505, 0.6102, 0.61, 0.6157, 0.6156, 0.6309, 0.6508, 0.6338, 0.6222, 0.6285, 0.5879, 0.6569, 0.6293, 0.6545, 0.5949, 0.6229, 0.654, 0.6312]) ,
                  'GraphSAGE':  np.asarray([0.5675, 0.6404, 0.5957, 0.6542, 0.6344, 0.5698, 0.5823, 0.5763, 0.5461, 0.5592, 0.636, 0.6475, 0.5633, 0.6457, 0.5843, 0.5605, 0.5857, 0.5829, 0.6076, 0.5931, 0.6279, 0.6496, 0.6123, 0.6092, 0.6029, 0.6556, 0.5949, 0.577, 0.5723, 0.5728]) ,
                  'FS-GNNTR': np.asarray([0.7266, 0.7311, 0.7309, 0.7318, 0.7309, 0.7325, 0.7293, 0.7315, 0.7284, 0.7312, 0.7327, 0.724, 0.7319, 0.7313, 0.7298, 0.7354, 0.7316, 0.728, 0.7312, 0.7284, 0.7284, 0.7304, 0.727, 0.7228, 0.7273, 0.7328, 0.73, 0.729, 0.7315, 0.7316])
                  })


df3 = df3[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df_final = pd.concat([df, df2, df3], ignore_index = True, sort = False)

dd=pd.melt(df_final,id_vars=['Task'],value_vars=['GIN','GCN','GraphSAGE','FS-GNNTR'],var_name='Models')
fig, ax = plt.subplots()
sns.boxplot(x='Task',y='value',data=dd,hue='Models', ax=ax)
ax.axhline(y = 0.7628, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='Task', ylabel='ROC-AUC score')
#sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
plt.legend([],[],frameon = False)
plt.savefig('boxplot_tox21_5.png', dpi=300)#, bbox_inches='tight')

############################################################## 10-shot ################################################################

df = pd.DataFrame({'Task': ['R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.', 'R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.', 'R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.'],\
                  'GIN':        np.asarray([0.6926, 0.6878, 0.6914, 0.6925, 0.6925, 0.6911, 0.6956, 0.6843, 0.6865, 0.6902, 0.6873, 0.6895, 0.6889, 0.689, 0.6918, 0.6942, 0.6962, 0.6954, 0.7013, 0.6907, 0.6938, 0.6912, 0.6875, 0.6904, 0.6879, 0.6973, 0.6903, 0.6851, 0.6864, 0.6903]) ,
                  'GCN':        np.asarray([0.5988, 0.6107, 0.6011, 0.5666, 0.5812, 0.6043, 0.5809, 0.6011, 0.6077, 0.6032, 0.5834, 0.5995, 0.5739, 0.6068, 0.596, 0.6067, 0.5916, 0.5914, 0.6004, 0.5989, 0.6015, 0.5897, 0.6007, 0.6033, 0.593, 0.6051, 0.5996, 0.5924, 0.5954, 0.6048]) ,
                  'GraphSAGE':  np.asarray([0.6341, 0.6254, 0.6337, 0.639, 0.6388, 0.6392, 0.6404, 0.617, 0.6341, 0.638, 0.6469, 0.6331, 0.6417, 0.6421, 0.6305, 0.6382, 0.6348, 0.6348, 0.642, 0.631, 0.6354, 0.6416, 0.6363, 0.6456, 0.6336, 0.6384, 0.6308, 0.6417, 0.6298, 0.6358]) ,
                  'FS-GNNTR': np.asarray([0.7114, 0.7204, 0.7182, 0.7177, 0.7195, 0.716, 0.7168, 0.7177, 0.7189, 0.7188, 0.7168, 0.7174, 0.721, 0.72, 0.7194, 0.7136, 0.72, 0.7139, 0.7198, 0.7199, 0.714, 0.7206, 0.7211, 0.72, 0.7184, 0.7147, 0.7183, 0.7206, 0.7184, 0.7193])
                  })


df = df[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df2 = pd.DataFrame({'Task': ['P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.'],\
                  'GIN':        np.asarray([0.7931, 0.7919, 0.7704, 0.7999, 0.7862, 0.7661, 0.779, 0.7757, 0.7603, 0.7869, 0.7732, 0.7556, 0.7859, 0.7859, 0.7872, 0.7824, 0.7976, 0.789, 0.7802, 0.7636, 0.7836, 0.7795, 0.7786, 0.7869, 0.7764, 0.7776, 0.7828, 0.7638, 0.7727, 0.7851]) ,
                  'GCN':        np.asarray([0.7077, 0.7256, 0.6963, 0.7087, 0.6706, 0.7034, 0.6972, 0.7118, 0.6995, 0.6858, 0.7104, 0.7368, 0.7149, 0.7129, 0.7234, 0.7246, 0.7085, 0.6971, 0.7092, 0.6845, 0.7335, 0.7192, 0.7269, 0.7316, 0.6658, 0.713, 0.7308, 0.6945, 0.7184, 0.7189]) ,
                  'GraphSAGE':  np.asarray([0.7272, 0.7236, 0.7245, 0.7281, 0.7399, 0.7442, 0.7522, 0.7327, 0.7258, 0.7376, 0.7347, 0.7327, 0.7318, 0.7498, 0.7475, 0.7372, 0.7524, 0.7499, 0.7425, 0.737, 0.7368, 0.7281, 0.7303, 0.7356, 0.7259, 0.7351, 0.7401, 0.7176, 0.7446, 0.742]) ,
                  'FS-GNNTR': np.asarray([0.7568, 0.7524, 0.7615, 0.7549, 0.7582, 0.7558, 0.755, 0.7524, 0.7507, 0.7529, 0.7667, 0.7512, 0.7543, 0.7616, 0.7615, 0.7578, 0.7621, 0.7598, 0.7564, 0.7512, 0.7568, 0.7654, 0.7576, 0.7545, 0.7523, 0.7543, 0.7514, 0.7564, 0.7545, 0.7627])
                  })

df2 = df2[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df3 = pd.DataFrame({'Task': ['E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.'],\
                  'GIN':        np.asarray([0.7081, 0.709, 0.7083, 0.707, 0.7082, 0.7067, 0.7129, 0.7071, 0.7078, 0.7054, 0.7067, 0.7137, 0.7055, 0.7074, 0.7068, 0.7019, 0.7118, 0.7087, 0.7124, 0.705, 0.7048, 0.7091, 0.6976, 0.7112, 0.7134, 0.7068, 0.7105, 0.7126, 0.7102, 0.7052]) ,
                  'GCN':        np.asarray([0.6022, 0.6043, 0.6079, 0.628, 0.6166, 0.6067, 0.6071, 0.6243, 0.609, 0.601, 0.5998, 0.6225, 0.6042, 0.6249, 0.6142, 0.6344, 0.6181, 0.6118, 0.6177, 0.6193, 0.5476, 0.6061, 0.6362, 0.6209, 0.6195, 0.6222, 0.6184, 0.6213, 0.6188, 0.6254]) ,
                  'GraphSAGE':  np.asarray([0.6404, 0.6426, 0.6396, 0.6503, 0.655, 0.6521, 0.6584, 0.6383, 0.6167, 0.6504, 0.6667, 0.6632, 0.6518, 0.6543, 0.609, 0.6445, 0.6547, 0.6482, 0.6399, 0.6601, 0.6495, 0.6568, 0.6456, 0.6583, 0.6706, 0.6466, 0.6419, 0.6328, 0.6551, 0.6638]) ,
                  'FS-GNNTR': np.asarray([0.7295, 0.7225, 0.7249, 0.7261, 0.7258, 0.7242, 0.7219, 0.7275, 0.7268, 0.7242, 0.7212, 0.7283, 0.7288, 0.7237, 0.7262, 0.7309, 0.7236, 0.7242, 0.7255, 0.7301, 0.7266, 0.7304, 0.7278, 0.728, 0.7264, 0.7249, 0.7227, 0.7252, 0.7244, 0.7245])
                  })

df3 = df3[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df4 = pd.DataFrame({'Task': ['C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D'],\
                  'GIN':        np.asarray([0.6754, 0.6731, 0.672, 0.6753, 0.6739, 0.6849, 0.6728, 0.6821, 0.6991, 0.6749, 0.6892, 0.6704, 0.685, 0.682, 0.6612, 0.6723, 0.6726, 0.6932, 0.6752, 0.6729, 0.6738, 0.6755, 0.6788, 0.675, 0.6728, 0.6918, 0.6708, 0.6711, 0.6943, 0.6809]) ,
                  'GCN':        np.asarray([0.5906, 0.5782, 0.5787, 0.5922, 0.5812, 0.5969, 0.6009, 0.5597, 0.599, 0.5948, 0.5813, 0.5969, 0.5969, 0.5976, 0.5825, 0.5804, 0.6, 0.5989, 0.5959, 0.5894, 0.6007, 0.5969, 0.5941, 0.575, 0.581, 0.5923, 0.5983, 0.5966, 0.5961, 0.6009]) ,
                  'GraphSAGE':  np.asarray([0.6385, 0.6415, 0.6427, 0.6408, 0.6391, 0.6288, 0.621, 0.6379, 0.6375, 0.6315, 0.6368, 0.6285, 0.6379, 0.6301, 0.6326, 0.6326, 0.6295, 0.637, 0.6374, 0.6166, 0.6115, 0.6344, 0.6195, 0.6417, 0.6285, 0.6328, 0.6274, 0.6385, 0.6332, 0.6314]) ,
                  'FS-GNNTR': np.asarray([0.7215, 0.725, 0.726, 0.72, 0.7252, 0.7245, 0.7255, 0.7252, 0.7244, 0.7232, 0.7266, 0.728, 0.721, 0.7195, 0.7218, 0.7236, 0.7251, 0.7254, 0.7222, 0.7211, 0.7259, 0.7277, 0.723, 0.727, 0.7285, 0.7249, 0.7247, 0.7252, 0.7255, 0.7244])
                  })

df4 = df4[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df5 = pd.DataFrame({'Task': ['N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.'],\
                  'GIN':        np.asarray([0.6754, 0.6731, 0.672, 0.6753, 0.6739, 0.6849, 0.6728, 0.6821, 0.6991, 0.6749, 0.6892, 0.6704, 0.685, 0.682, 0.6612, 0.6723, 0.6726, 0.6932, 0.6752, 0.6729, 0.6738, 0.6755, 0.6788, 0.675, 0.6728, 0.6918, 0.6708, 0.6711, 0.6943, 0.6809]) ,
                  'GCN':        np.asarray([0.582, 0.5907, 0.601, 0.5637, 0.5684, 0.5733, 0.5729, 0.6044, 0.5694, 0.5519, 0.5787, 0.5734, 0.58, 0.5689, 0.5628, 0.5742, 0.5979, 0.5917, 0.583, 0.5893, 0.5698, 0.567, 0.5771, 0.5899, 0.5775, 0.5739, 0.5737, 0.5991, 0.5677, 0.5945]) ,
                  'GraphSAGE':  np.asarray([0.5738, 0.5697, 0.5871, 0.6009, 0.6035, 0.6209, 0.5767, 0.6111, 0.6102, 0.6059, 0.6118, 0.5742, 0.5965, 0.5437, 0.5703, 0.6174, 0.6256, 0.5669, 0.5962, 0.5963, 0.5957, 0.5803, 0.6069, 0.6105, 0.601, 0.6147, 0.622, 0.5838, 0.6095, 0.632]) ,
                  'FS-GNNTR': np.asarray([0.655, 0.6564, 0.6543, 0.6609, 0.6571, 0.6493, 0.6616, 0.6508, 0.6658, 0.656, 0.6583, 0.6502, 0.6473, 0.6557, 0.6588, 0.6477, 0.6503, 0.6441, 0.6504, 0.6576, 0.654, 0.6539, 0.6458, 0.6547, 0.6584, 0.6502, 0.6526, 0.65, 0.6487, 0.6548])
                  })

df5 = df5[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df6 = pd.DataFrame({'Task': ['I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.'],\
                  'GIN':        np.asarray([0.7334, 0.7367, 0.7354, 0.736, 0.7334, 0.7295, 0.7414, 0.7412, 0.7335, 0.7404, 0.7421, 0.7377, 0.7443, 0.7439, 0.7474, 0.7405, 0.7437, 0.7467, 0.7304, 0.7385, 0.739, 0.7436, 0.7431, 0.7357, 0.7415, 0.7375, 0.7464, 0.7354, 0.7418, 0.7348]) ,
                  'GCN':        np.asarray([0.64, 0.646, 0.6578, 0.6306, 0.6612, 0.6564, 0.6397, 0.6454, 0.6358, 0.6478, 0.6306, 0.6479, 0.6463, 0.6436, 0.6389, 0.6395, 0.6606, 0.6496, 0.6565, 0.6407, 0.6388, 0.6211, 0.6414, 0.6283, 0.6328, 0.6309, 0.6409, 0.6456, 0.6082, 0.6518]) ,
                  'GraphSAGE':  np.asarray([0.7023, 0.6898, 0.6908, 0.6913, 0.6901, 0.6975, 0.6744, 0.6928, 0.7029, 0.6924, 0.7043, 0.6833, 0.7056, 0.6964, 0.6915, 0.6908, 0.6855, 0.6946, 0.6755, 0.6877, 0.693, 0.6863, 0.6983, 0.687, 0.6911, 0.6951, 0.6697, 0.686, 0.6846, 0.6991]) ,
                  'FS-GNNTR': np.asarray([0.7512, 0.7478, 0.7502, 0.7487, 0.7466, 0.7499, 0.7478, 0.7477, 0.7482, 0.7501, 0.748, 0.7475, 0.7524, 0.7444, 0.7515, 0.7452, 0.7482, 0.7468, 0.7489, 0.7503, 0.751, 0.7496, 0.7488, 0.7492, 0.7484, 0.7452, 0.747, 0.7481, 0.7476, 0.7459])
                  })

df6 = df6[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df_final = pd.concat([df, df2, df3, df4, df5, df6], ignore_index = True, sort = False)

dd=pd.melt(df_final,id_vars=['Task'],value_vars=['GIN','GCN','GraphSAGE','FS-GNNTR'],var_name='Models')
fig, ax = plt.subplots()
sns.boxplot(x='Task',y='value',data=dd,hue='Models', ax=ax)
ax.axhline(y = 0.7212, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='Task', ylabel='ROC-AUC score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
plt.savefig('boxplot_sider_10.png', dpi=300, bbox_inches='tight')

##########################################################


df = pd.DataFrame({'Task': ['SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE'],\
                  'GIN':        np.asarray([0.6544, 0.6447, 0.6503, 0.6535, 0.6645, 0.6513, 0.6441, 0.663, 0.6587, 0.6697, 0.6606, 0.63, 0.658, 0.6703, 0.6483, 0.6666, 0.6211, 0.6506, 0.6468, 0.6472, 0.6655, 0.6476, 0.6646, 0.6637, 0.6561, 0.6676, 0.6371, 0.6559, 0.6493, 0.6385]) ,
                  'GCN':        np.asarray([0.5666, 0.6628, 0.6573, 0.6393, 0.6569, 0.6677, 0.6549, 0.6668, 0.6637, 0.6659, 0.6707, 0.661, 0.6473, 0.6632, 0.6432, 0.6669, 0.6685, 0.6644, 0.6615, 0.6015, 0.6144, 0.6581, 0.6529, 0.6483, 0.641, 0.6544, 0.64, 0.6667, 0.6671, 0.6352]) ,
                  'GraphSAGE':  np.asarray([0.6626, 0.6834, 0.6298, 0.6888, 0.6556, 0.7019, 0.6448, 0.68, 0.6779, 0.6005, 0.6684, 0.6925, 0.6629, 0.6855, 0.6839, 0.676, 0.6517, 0.6818, 0.6603, 0.6549, 0.6507, 0.649, 0.6749, 0.68, 0.6413, 0.7048, 0.5947, 0.6704, 0.7, 0.6728]) ,
                  'FS-GNNTR': np.asarray([0.7774, 0.7791, 0.7826, 0.7789, 0.7828, 0.7819, 0.7812, 0.7826, 0.7789, 0.7795, 0.78, 0.7801, 0.7784, 0.7788, 0.7797, 0.785, 0.7809, 0.7833, 0.7827, 0.779, 0.778, 0.7798, 0.7779, 0.7811, 0.7782, 0.7775, 0.7782, 0.7814, 0.7796, 0.7822])
                  })


df = df[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df2 = pd.DataFrame({'Task': ['SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP'],\
                  'GIN':        np.asarray([0.6074, 0.6287, 0.6266, 0.6239, 0.6182, 0.6302, 0.6144, 0.609, 0.6103, 0.6267, 0.6266, 0.6296, 0.6398, 0.6009, 0.6211, 0.6356, 0.6323, 0.6562, 0.6246, 0.6267, 0.6186, 0.6267, 0.6169, 0.6258, 0.6228, 0.6125, 0.6193, 0.6306, 0.6349, 0.6242]) ,
                  'GCN':        np.asarray([0.6772, 0.676, 0.635, 0.6573, 0.6109, 0.6538, 0.6378, 0.6662, 0.6522, 0.6632, 0.6629, 0.6579, 0.6518, 0.6564, 0.6198, 0.6841, 0.6365, 0.6866, 0.6465, 0.7057, 0.652, 0.6727, 0.6763, 0.6913, 0.6129, 0.6558, 0.6807, 0.6682, 0.6867, 0.6699]) ,
                  'GraphSAGE':  np.asarray([0.7041, 0.6246, 0.702, 0.7033, 0.7009, 0.6895, 0.7033, 0.6889, 0.7136, 0.7262, 0.6881, 0.719, 0.659, 0.7058, 0.6961, 0.7238, 0.6944, 0.7085, 0.699, 0.6773, 0.6816, 0.7148, 0.6604, 0.6977, 0.6847, 0.6811, 0.6685, 0.7068, 0.6415, 0.6651]) ,
                  'FS-GNNTR': np.asarray([0.7959, 0.797, 0.7986, 0.7968, 0.7944, 0.7987, 0.7967, 0.7978, 0.7992, 0.7968, 0.7968, 0.7945, 0.7982, 0.7951, 0.7978, 0.7974, 0.7963, 0.796, 0.7938, 0.7952, 0.7939, 0.7972, 0.7937, 0.7988, 0.7933, 0.7975, 0.7959, 0.7977, 0.795, 0.797])
                  })


df2 = df2[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df3 = pd.DataFrame({'Task': ['SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53'],\
                  'GIN':        np.asarray([0.6369, 0.6193, 0.6366, 0.6373, 0.6348, 0.6236, 0.5937, 0.6316, 0.6212, 0.6281, 0.6328, 0.6102, 0.6212, 0.6206, 0.6441, 0.6061, 0.6361, 0.625, 0.6332, 0.646, 0.632, 0.6278, 0.608, 0.6383, 0.6303, 0.6432, 0.6305, 0.6199, 0.6345, 0.6378]) ,
                  'GCN':        np.asarray([0.6237, 0.6409, 0.6442, 0.6196, 0.6409, 0.6266, 0.6355, 0.6362, 0.6392, 0.6264, 0.6076, 0.6187, 0.623, 0.6293, 0.63, 0.6505, 0.6152, 0.6308, 0.6411, 0.6119, 0.6199, 0.6218, 0.6352, 0.6411, 0.6142, 0.6269, 0.6309, 0.6288, 0.6415, 0.6433]) ,
                  'GraphSAGE':  np.asarray([0.6631, 0.5793, 0.6441, 0.6131, 0.6545, 0.6378, 0.6034, 0.6471, 0.6595, 0.5936, 0.6168, 0.6244, 0.6048, 0.6599, 0.6455, 0.6441, 0.6061, 0.6202, 0.665, 0.6636, 0.6328, 0.6476, 0.6359, 0.6479, 0.6498, 0.6495, 0.6605, 0.602, 0.599, 0.6665]) ,
                  'FS-GNNTR': np.asarray([0.7471, 0.7445, 0.7507, 0.7468, 0.7448, 0.7482, 0.7515, 0.7469, 0.7446, 0.7473, 0.7504, 0.7436, 0.747, 0.7474, 0.7462, 0.747, 0.7466, 0.7492, 0.748, 0.744, 0.7431, 0.7451, 0.7486, 0.745, 0.7476, 0.7468, 0.7473, 0.7431, 0.7471, 0.7473])
                  })


df3 = df3[['Task','GIN','GCN','GraphSAGE','FS-GNNTR']]

df_final = pd.concat([df, df2, df3], ignore_index = True, sort = False)

dd=pd.melt(df_final,id_vars=['Task'],value_vars=['GIN','GCN','GraphSAGE','FS-GNNTR'],var_name='Models')
fig, ax = plt.subplots()
sns.boxplot(x='Task',y='value',data=dd,hue='Models', ax=ax)
ax.axhline(y =0.7745, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='Task', ylabel='ROC-AUC score')
#sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
plt.legend([],[],frameon = False)
plt.savefig('boxplot_tox21_10.png', dpi=300)#, bbox_inches='tight')
